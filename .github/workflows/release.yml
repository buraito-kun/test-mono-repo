name: Release Semantic Version

on:
  push:
    branches:
      - main

jobs:
  test:
    uses: ./.github/workflows/test application.yml

  scan-image:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - test
    strategy:
      matrix:
        service: [frontend, backend]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image ${{ matrix.service }}
        run: |
          BUILD_ARGS=""
          if [ "${{ matrix.service }}" == "frontend" ]; then
            BUILD_ARGS="--build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}"
          fi

          docker build -t ghcr.io/${{ github.repository_owner }}/test-mono-repo/${{ matrix.service }}:latest \
          --label org.opencontainers.image.source=https://github.com/${{ github.repository }} \
          $BUILD_ARGS \
          ./apps/${{ matrix.service }}

      - name: Run Trivy scan for ${{ matrix.service }}
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: image
          image-ref: ghcr.io/${{ github.repository_owner }}/test-mono-repo/${{ matrix.service }}:latest
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH

  release:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs:
      - scan-image
    outputs:
      release_created: ${{ steps.release.outputs.release_created}}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
      patch: ${{ steps.release.outputs.patch }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - id: release
        name: use release-please
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  build-and-push:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - release
    if: ${{ needs.release.outputs.release_created}}
    strategy:
      matrix:
        service: [frontend, backend]
    env:
      VERSION: ${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }}.${{ needs.release.outputs.patch }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push image ${{ matrix.service }}
        run: |
          BUILD_ARGS=""
          if [ "${{ matrix.service }}" == "frontend" ]; then
            BUILD_ARGS="--build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}"
          fi

          docker build -t ghcr.io/${{ github.repository_owner }}/test-mono-repo/${{ matrix.service }}:latest \
          -t ghcr.io/${{ github.repository_owner }}/test-mono-repo/${{ matrix.service }}:${{ env.VERSION }} \
          --label org.opencontainers.image.source=https://github.com/${{ github.repository }} \
          $BUILD_ARGS \
          ./apps/${{ matrix.service }}
          
          docker push ghcr.io/${{ github.repository_owner }}/test-mono-repo/${{ matrix.service }}:latest
          docker push ghcr.io/${{ github.repository_owner }}/test-mono-repo/${{ matrix.service }}:${{ env.VERSION }}

  notification:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs:
      - release
      - build-and-push
    if: ${{ needs.release.outputs.release_created}}
    steps:
      - name: Send notification to Google Chat
        uses: buraito-kun/send-google-chat-webhook@v0.0.6
        with:
          webhook_url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          mention: "<users/off.brightthanadej@gmail.com>"
